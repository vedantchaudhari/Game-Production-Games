using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  public class buyButton : MonoBehaviour { 	GameObject moneyUI; 	GameObject equippedUI; 	public string weaponType; 	public int weaponID; 	public Text buttonText; 	GameObject manager; 	GameObject shopPanel; 	GameObject powerControl; 	public AudioClip buySound; 	public AudioClip errorSound; 	//GameObject moneyUI; 	//GameObject equippedUI;  	// Use this for initialization 	void Start () { 		manager = GameObject.Find ("gameManager"); 		shopPanel = GameObject.Find ("shopPanel"); 		powerControl = GameObject.Find ("Slider"); 		moneyUI = GameObject.Find ("Canvas/shopPanel/moneyUI"); 		equippedUI = GameObject.Find ("Canvas/shopPanel/equippedUI"); 	}  	// Update is called once per frame 	void Update () {  	} 	public void buyWeapon()//ON CLICK 	{ 		if (weaponID == 0) { 			Debug.Log ("NO WEAPON ID SET"); 			return; 		}  		for (int i = 0; i < weaponsShop.WeaponShop.weaponList.Count; i++) { 			if (weaponsShop.WeaponShop.weaponList [i].weaponID == weaponID && !weaponsShop.WeaponShop.weaponList [i].bought && gameManager.gameManagerr.checkMoney (weaponsShop.WeaponShop.weaponList [i].weaponPrice)) { 				// BUY IT 				// if it is the back button.. go back 				if(weaponsShop.WeaponShop.weaponList [i].weaponID == 1) 				{ 					manager.GetComponent<gameManager>().shop = false; 					//shopPanel.GetComponent<weaponsShop> ().first = true; 					shopPanel.SetActive (false); 					powerControl.GetComponent<PowerControl> ().useShop = true; 					powerControl.GetComponent<PowerControl> ().sliderActive = true; 					powerControl.GetComponent<PowerControl> ().stop = false; 				} 				else if(weaponsShop.WeaponShop.weaponList [i].weaponID == 14) 				{ 					Application.Quit(); 				} 				weaponsShop.WeaponShop.weaponList [i].bought = true; 				if (buySound && weaponsShop.WeaponShop.weaponList [i].weaponID != 1) { 					SoundManager.instance.playSingle (buySound); 				} 				equippedUI.SetActive(true); 				//StartCoroutine(hideUI()); 				// set weapon ID to be used here! 				gameManager.gameManagerr.currentWeaponID = weaponID; 				weaponType = weaponsShop.WeaponShop.weaponList [i].itemType; 				gameManager.gameManagerr.currentWeaponType = weaponType; 				gameManager.gameManagerr.reduceMoney (weaponsShop.WeaponShop.weaponList [i].weaponPrice);  				updateBuyButton (); 			}  else if (weaponsShop.WeaponShop.weaponList [i].weaponID == weaponID && !weaponsShop.WeaponShop.weaponList [i].bought && !gameManager.gameManagerr.checkMoney (weaponsShop.WeaponShop.weaponList [i].weaponPrice)) { 				//Debug.Log ("Not enough money"); 				moneyUI.SetActive(true); 				//StartCoroutine(hideUI()); 			}  else if (weaponsShop.WeaponShop.weaponList [i].weaponID == weaponID && weaponsShop.WeaponShop.weaponList [i].bought) { 				//Debug.Log ("Has been bought already"); 				equippedUI.SetActive(true); 				if (weaponsShop.WeaponShop.weaponList[i].isBackButton == 1) { 					/*for(int x = 0; x < weaponsShop.WeaponShop.weaponList.Count; x++) 					{ 						if(weaponsShop.WeaponShop.weaponList[x].weaponID != 1) 						{ 							weaponsShop.WeaponShop.weaponList[x].isBackButton = 0; 						} 					}*/ 					manager.GetComponent<gameManager>().shop = false; 					//shopPanel.GetComponent<weaponsShop> ().first = true; 					shopPanel.SetActive (false); 					powerControl.GetComponent<PowerControl> ().useShop = true; 					powerControl.GetComponent<PowerControl> ().sliderActive = true; 					powerControl.GetComponent<PowerControl> ().stop = false; 				}  else  				{ 				// set weapon ID to be used here! 				gameManager.gameManagerr.currentWeaponID = weaponID; 				weaponType = weaponsShop.WeaponShop.weaponList [i].itemType; 				gameManager.gameManagerr.currentWeaponType = weaponType; 				}  				updateBuyButton (); 			} 		}  		//weaponsShop.WeaponShop.updateSprite (weaponID); 	}  	void updateBuyButton() 	{ 		/*buttonText.text = "Using";  		for (int i = 0; i < weaponsShop.WeaponShop.buyButtonList.Count; i++) { 			buyButton buyButtonScript = weaponsShop.WeaponShop.buyButtonList [i].GetComponent<buyButton> (); 			for (int j = 0; j < weaponsShop.WeaponShop.weaponList.Count; j++) {  				// has bought and has match 				if (weaponsShop.WeaponShop.weaponList [j].weaponID == buyButtonScript.weaponID && weaponsShop.WeaponShop.weaponList [j].bought && weaponsShop.WeaponShop.weaponList [j].weaponID != weaponID) { 					buyButtonScript.buttonText.text = "Use"; 				} 			} 		} 		// change current weapon on character here 		// update it based on ID 		*/ 		weaponsShop.WeaponShop.updateBuyButtons (); 		weaponsShop.WeaponShop.updateSprite (weaponID); 	}  	/*IEnumerator hideUI() 	{ 		yield return new WaitForSeconds (0.5f); 		if (equippedUI.activeSelf == true) { 			equippedUI.SetActive (false); 		} else { 			moneyUI.SetActive (false); 		} 	}*/ }  