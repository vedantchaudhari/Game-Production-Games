using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;   public class gameManager : MonoBehaviour {  	public Image black; 	public Animator anim; 	public GameObject player; 	public GameObject shopPanel; 	public static  gameManager gameManagerr; 	public bool heldEnough = false; 	public bool shop = false;  	[SerializeField] private float money;   	public int currentWeaponID = 0; 	public string currentWeaponType = "string"; 	//float waitTimer = 2f; 	float timeWaited = 0f;  	public Text moneyText; 	// Use this for initialization 	void Start () { 		gameManagerr = this; 		updateUI (); 		StartCoroutine(fadeIn()); 	}  	// Update is called once per frame 	void Update () { 		if (Input.GetKey(KeyCode.Space)) { 			timeWaited += Time.deltaTime; 		} 		if (Input.GetKeyUp(KeyCode.Space)) { 			timeWaited = 0f; 		} 		// set the canvas active if penguin velocity is zero and space is held, then if held again deactivate it 		if (player.GetComponent<Rigidbody2D> ().velocity.x == 0 && !shop && heldEnough && player.GetComponent<fireGun>().first /*&& timeWaited > waitTimer && player.GetComponent<fireGun>().bulletAmount == 0*/) { 			heldEnough = false; 			timeWaited = 0f	; 			shop = true; 			//timeWaited += Time.deltaTime; 			shopPanel.SetActive (true); 		}  /*else if (shop /*&& timeWaited > waitTimer*/ /*&& timeWaited > waitTimer && player.GetComponent<fireGun>().bulletAmount == 0*/ /*&& heldEnough) { 		//timeWaited = 0f; 		heldEnough = false; 		timeWaited = 0f; 		shop = false; 		shopPanel.SetActive (false); 	} */  }  public void addMoney(float amount) { 	money += amount; 	updateUI (); }  public void reduceMoney(float amount) { 	money -= amount; 	updateUI (); }  public bool checkMoney(float amount) { 	if (amount <= money) { 		return true; 	} 	return false; }  public float getMoney() { 	return money; }  void updateUI() { 	moneyText.text = "$ " + money.ToString ("N2"); }	  public void setMoney(float amount) { 	money = amount; 	updateUI (); }  IEnumerator fadeIn() { 	anim.SetBool ("Fade", true); 	yield return new WaitUntil (() => black.color.a == 1); 	anim.SetBool ("Fade", false); } }  